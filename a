cd /home/kukuhtw/rust/ppv_stream
make db-up
make wait-db
make migrate
make build      # (build online sqlx)
make run-all
make seed
docker compose up -d app watcher


# buka http://localhost:8080/

make checkx402 NET=polygonAmoyTestnet 
make checkx402 NET=polygonMainnet

make estimatex402 NET=polygonAmoyTestnet
make estimatex402 NET=polygonMainnet

make deployx402 NET=polygonAmoyTestnet
make deployx402 polygonMainnet

kukuhtw@KukuhTW-Lenovo:~/rust/ppv_stream$ make deployx402 NET=polygonAmoyTestnet
==> Deploy X402Splitter ke network: polygonAmoyTestnet
Downloading compiler 0.8.20
Compiled 1 Solidity file successfully (evm target: paris).
==============================================
🚀 Deploying X402Splitter...
🌐 Network   : polygonAmoyTestnet (chainId: 80002)
👤 Admin     : 0xB7256FB6fe96b8aDB4B4280E459fBED02C8db6f0
==============================================
🧾 Deploy tx : 0x407f74740b0347dacf45c6069439322084acdbb97129a70bbe4fbe0297a93e47
⏳ Waiting for deployment...
✅ Deployed!
🏷  Address  : 0xe375691C0a45db07c9DD7843d12eF283C084AE8A
📦 Block    : 28110063
🧑‍💻 Deployer: 0xB7256FB6fe96b8aDB4B4280E459fBED02C8db6f0
🔗 Explorer : https://amoy.polygonscan.com/address/0xe375691C0a45db07c9DD7843d12eF283C084AE8A
🔗 Tx       : https://amoy.polygonscan.com/tx/0x407f74740b0347dacf45c6069439322084acdbb97129a70bbe4fbe0297a93e47
📝 Written to: deployed.json

==> Kontrak ter-deploy di: 0x407f74740b0347dacf45c6069439322084acdbb9
/bin/bash: line 30: @awk: command not found
✅ Disimpan ke .env: X402_CONTRACT_ADDRESS=0x407f74740b0347dacf45c6069439322084acdbb9
kukuhtw@KukuhTW-Lenovo:~/rust/ppv_stream$



kukuhtw@KukuhTW-Lenovo:~/rust/ppv_stream$ make deployx402 NET=megaTestnet



==> Deploy X402Splitter ke network: megaTestnet
Downloading compiler 0.8.20
Compiled 1 Solidity file successfully (evm target: paris).
==============================================
🚀 Deploying X402Splitter...
Network: megaTestnet
Chain ID: 6342
Admin Wallet: 0xB7256FB6fe96b8aDB4B4280E459fBED02C8db6f0
==============================================
X402Splitter deployed at: 0xa16bcF1D0Fd77A36ED4e2e0aC73fD36d5c7B3c96
==> Kontrak ter-deploy di: 0xa16bcF1D0Fd77A36ED4e2e0aC73fD36d5c7B3c96
✅ Disimpan ke .env: X402_CONTRACT_ADDRESS=0xa16bcF1D0Fd77A36ED4e2e0aC73fD36d5c7B3c96
kukuhtw@KukuhTW-Lenovo:~/rust/ppv_stream$




curl -X POST https://carrot.megaeth.com/rpc \
  -H "Content-Type: application/json" \
  -d '{"jsonrpc":"2.0","method":"eth_getCode","params":["0xa16bcF1D0Fd77A36ED4e2e0aC73fD36d5c7B3c96","latest"],"id":1}'


make adminer-up  
kukuhtw@KukuhTW-Lenovo:~/rust/ppv_stream$ tree
.
├── Cargo.lock
├── Cargo.toml
├── Dockerfile
├── Makefile
├── README.md
├── a
├── contracts
│   ├── Dockerfile
│   ├── contracts
│   │   └── X402Splitter.sol
│   ├── guidance_smartcontract_deployment
│   ├── hardhat.config.js
│   ├── package.json
│   └── scripts
│       ├── check_balance.js
│       ├── deploy_x402.js
│       └── estimate_gas_cost.js
├── docker-compose.yml
├── migrations
│   ├── 013_tokens.sql
│   ├── 014_x402_invoice.sql
│   ├── 015_users_wallet_chain.sql
│   ├── 016_purchases_fk_video.sql
│   ├── 017_allowlist_idx_username.sql
│   ├── 018_invoice_uid_hash.sql
│   ├── 019_x402_core.sql
│   ├── 020_x402_invoice_hash.sql
│   ├── 021_pay_tokens.sql
│   ├── 022_pay_tokens_rename_erc20.sql
│   ├── 023_x402_underpay_and_quote.sql
│   └── 024_pay_tokens_compat_view.sql
├── public
│   ├── admin
│   │   ├── dashboard.html
│   │   └── login.html
│   ├── auth
│   │   ├── forgot_password.html
│   │   ├── login.html
│   │   ├── register.html
│   │   └── reset_password.html
│   ├── browse.html
│   ├── dashboard.html
│   ├── index.html
│   ├── styles.css
│   └── watch.html
├── sql
│   ├── 001_init.sql
│   ├── 002_admins.sql
│   ├── 003_password_resets.sql
│   ├── 004_sessions.sql
│   ├── 005_allowlist.sql
│   ├── 006_indexes.sql
│   ├── 007_perf_and_fk.sql
│   ├── 008_price_cents_bigint.sql
│   ├── 009_users_username_unique.sql
│   ├── 010_videos_hls.sql
│   ├── 011_videos_description.sql
│   └── 012_user_profile.sql
├── src
│   ├── a
│   ├── auth.rs
│   ├── bin
│   │   └── seed_dummy.rs
│   ├── bootstrap.rs
│   ├── config.rs
│   ├── db.rs
│   ├── email.rs
│   ├── ffmpeg.rs
│   ├── handlers
│   │   ├── admin.rs
│   │   ├── auth_admin.rs
│   │   ├── auth_user.rs
│   │   ├── kurs.rs
│   │   ├── me.rs
│   │   ├── mod.rs
│   │   ├── pages.rs
│   │   ├── password.rs
│   │   ├── pay.rs
│   │   ├── setup.rs
│   │   ├── stream.rs
│   │   ├── upload.rs
│   │   ├── users.rs
│   │   └── video.rs
│   ├── hls.rs
│   ├── main.rs
│   ├── middleware.rs
│   ├── models.rs
│   ├── schema.sql
│   ├── services
│   │   └── x402_watcher.rs
│   ├── sessions.rs
│   ├── token.rs
│   ├── util.rs
│   ├── validators.rs
│   └── worker.rs

13 directories, 74 files
kukuhtw@KukuhTW-Lenovo:~/rust/ppv_stream$



┌───────────────┐
│ User Browser  │
│ (HTML + JS)   │
└──────┬────────┘
       │ HTTP
       ▼
┌───────────────────────┐
│ Rust Backend (Axum)   │
│  - Auth (user/admin)  │
│  - Upload MP4         │
│  - Allowlist / Buy     │
│  - Request HLS Token  │
│  - Serve HLS Segments │
└────────┬──────────────┘
         │
         ▼
   ┌──────────────┐
   │ SQLite DB    │
   │ (users,      │
   │  videos,     │
   │  purchases,  │
   │  allowlist)  │
   └──────────────┘
         │
         ▼
   ┌──────────────┐
   │ File Storage │
   │  - /storage/ │
   │  - /hls/     │
   └──────────────┘
# dari root project (ada Dockerfile & docker-compose.yaml)
docker build -t ppv_stream:dev .
docker images | grep ppv_stream      # pastikan terlihat ppv_stream   dev

docker compose up -d db app
docker compose logs -f app

docker build -t ppv_stream:dev .
docker compose up -d app db
docker compose logs -f app


find . -type f -name "*:Zone.Identifier" -exec rm -f {} +


docker system prune -af --volumes
cargo clean
rm -rf target
rm -rf data/ppv.db

docker compose up -d db
docker build --no-cache \
  --add-host=host.docker.internal:host-gateway \
  --build-arg DATABASE_URL=postgres://ppv:secret@host.docker.internal:5432/ppv_stream \
  --build-arg BUILD_REV=$(date +%s) \
  -t ppv_stream:dev .



kukuhtw+user1@gmail.com
user1Yfji477EGG1444


kukuhtw+user2@gmail.com
user2ji477EGG1444

ADMIN_BOOTSTRAP_EMAIL=admin@example.com
ADMIN_BOOTSTRAP_PASSWORD=ChangeMe123!


docker exec -it ppv_stream_db psql -U ppv -d ppv_stream -c \
"SELECT email, is_admin FROM users;"


| No | Username   | Email                                           | Password (plain) |
| -- | ---------- | ----------------------------------------------- | ---------------- |
| 1  | **user01** | [user01@example.com](mailto:user01@example.com) | `Passw0rd01!`    |
| 2  | **user02** | [user02@example.com](mailto:user02@example.com) | `Passw0rd02!`    |
| 3  | **user03** | [user03@example.com](mailto:user03@example.com) | `Passw0rd03!`    |
| 4  | **user04** | [user04@example.com](mailto:user04@example.com) | `Passw0rd04!`    |
| 5  | **user05** | [user05@example.com](mailto:user05@example.com) | `Passw0rd05!`    |
| 6  | **user06** | [user06@example.com](mailto:user06@example.com) | `Passw0rd06!`    |
| 7  | **user07** | [user07@example.com](mailto:user07@example.com) | `Passw0rd07!`    |
| 8  | **user08** | [user08@example.com](mailto:user08@example.com) | `Passw0rd08!`    |
| 9  | **user09** | [user09@example.com](mailto:user09@example.com) | `Passw0rd09!`    |
| 10 | **user10** | [user10@example.com](mailto:user10@example.com) | `Passw0rd10!`    |

